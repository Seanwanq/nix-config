# Do not modify this file!  It was generated by 'nixos-generate-config'
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ ];

  boot.initrd.availableKernelModules = [ "ata_piix" "ohci_pci" "ehci_pci" "ahci" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ "hv_vmbus" "hv_balloon" "hv_storvsc" "hv_netvsc" ];
  boot.kernelModules = [ "hv_balloon" "hv_utils" "hv_storvsc" "hv_netvsc" ];
  boot.extraModulePackages = [ ];

  # 注意：请根据实际的分区情况调整这些路径
  # 从诊断看到 /boot 在 sda1，但需要确认根分区位置
  fileSystems."/" =
    { device = "/dev/sda2";  # 可能需要调整
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/sda1";  # 确认是 EFI 系统分区
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  
  # Hyper-V 虚拟化配置
  virtualisation.hypervGuest.enable = true;
}